% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lightgbm_train.R
\name{LightgbmTrain}
\alias{LightgbmTrain}
\title{R6 LightGBM train function}
\description{
A wrapper around the lightgbm.train python class.
}
\references{
\url{https://lightgbm.readthedocs.io}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{dataset}}{A data.table object holding the dataset, provided at
instantiation.}

\item{\code{feature_names}}{A character vector holding the feature names.}

\item{\code{target_names}}{A character vector holding the target names.}

\item{\code{param_set}}{The parameter set.}

\item{\code{parameters}}{The modified parameter set, which is provided to the
train function.}

\item{\code{train_data}}{A data.table object holding the training data.}

\item{\code{train_label}}{A vector holding the training labels.}

\item{\code{valid_data}}{A data.table object holding the validation data.}

\item{\code{valid_label}}{A vector holding the validation labels.}

\item{\code{model}}{The trained lightgbm model (python class 'Booster').}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{LightgbmTrain$new()}}
\item \href{#method-data_preprocessing}{\code{LightgbmTrain$data_preprocessing()}}
\item \href{#method-train}{\code{LightgbmTrain$train()}}
\item \href{#method-predict}{\code{LightgbmTrain$predict()}}
\item \href{#method-transform_target}{\code{LightgbmTrain$transform_target()}}
\item \href{#method-importance}{\code{LightgbmTrain$importance()}}
\item \href{#method-clone}{\code{LightgbmTrain$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
The initialize function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LightgbmTrain$new(dataset, target_col, id_col = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{A data.table object. The dataset used for training.}

\item{\code{target_col}}{A character string. The name of the target column.}

\item{\code{id_col}}{(optional) A character string. The name if the ID column
(default: NULL).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-data_preprocessing"></a>}}
\subsection{Method \code{data_preprocessing()}}{
The data preprocessing function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LightgbmTrain$data_preprocessing(validation_split = 0.7, split_seed = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{validation_split}}{A numeric. Ratio to further split the training
data for validation (default: 0.7). The allowed value range is
0 < validation_split <= 1. This parameter can also be set to
'1', taking the whole training data for validation during the model
training.}

\item{\code{split_seed}}{A integer (default: NULL). Please use this argument in
order to generate reproducible results.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-train"></a>}}
\subsection{Method \code{train()}}{
The training function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LightgbmTrain$train(
  num_boost_round = 100,
  early_stopping_rounds = 0,
  feval = NULL,
  verbose_eval = 50
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{num_boost_round}}{A integer. The number of boosting iterations
(default: 100).}

\item{\code{early_stopping_rounds}}{A integer. It will stop training if one
metric of one validation data doesnâ€™t improve in last
`early_stopping_round` rounds. '0' means disable (default: 0).}

\item{\code{feval}}{Customized evaluation function (default: NULL).}

\item{\code{verbose_eval}}{A integer. The eval metric on the valid set is
printed at every verbose_eval boosting stage (default: 50).}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
All arguments are passed to the train function of python's
  lightgbm implementation by using R's reticulate package.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-predict"></a>}}
\subsection{Method \code{predict()}}{
The predict function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LightgbmTrain$predict(newdata)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{newdata}}{A data.table object holding the data which should be
predicted.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
All arguments are passed to the predict function of the created
  lightgbm python model by using R's reticulate package.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-transform_target"></a>}}
\subsection{Method \code{transform_target()}}{
Transform the target variable
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LightgbmTrain$transform_target(vector)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{vector}}{A vector containing targets.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The function is used internally, to transform the target
  variable to meet LightGBMs requirements. It can also be used,
  to transform the yet untransformed target variable of a holdout
  dataset.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-importance"></a>}}
\subsection{Method \code{importance()}}{
The importance function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LightgbmTrain$importance()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Exports the model's variable importance.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LightgbmTrain$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
